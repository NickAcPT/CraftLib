[
    {
        "classes": {
            "anvilchunkloader": "net/minecraft/server/level/ChunkMap",
            "biome.list": "net/minecraft/world/level/biome/Biomes",
            "biome.register": "net/minecraft/world/level/biome/Biomes",
            "block.list": "net/minecraft/world/level/block/Blocks",
            "block.register": "net/minecraft/world/level/block/Blocks",
            "blockstate": "net/minecraft/world/level/block/state/BlockState",
            "blockstatecontainer": "net/minecraft/world/level/block/state/StateDefinition$Builder",
            "chatcomponent": "net/minecraft/network/chat/Component",
            "entity.list": "net/minecraft/world/entity/EntityType",
            "enumfacing.plane": "net/minecraft/core/Direction$Plane",
            "identifier": "net/minecraft/resources/ResourceLocation",
            "item.list": "net/minecraft/world/item/Items",
            "item.register": "net/minecraft/world/item/Items",
            "itemstack": "net/minecraft/world/item/ItemStack",
            "metadata": "net/minecraft/network/syncher/SynchedEntityData",
            "nbtcompound": "net/minecraft/nbt/CompoundTag",
            "nethandler.client": "net/minecraft/client/multiplayer/ClientPacketListener",
            "nethandler.server": "net/minecraft/server/network/ServerHandshakePacketListenerImpl",
            "packet.connectionstate": "net/minecraft/network/ConnectionProtocol",
            "packet.packetbuffer": "net/minecraft/network/FriendlyByteBuf",
            "particle": "net/minecraft/core/particles/ParticleOptions",
            "particletypes": "net/minecraft/core/particles/ParticleTypes",
            "position": "net/minecraft/core/BlockPos",
            "recipe.superclass": "net/minecraft/data/recipes/RecipeProvider",
            "sounds.event": "net/minecraft/sounds/SoundEvents",
            "sounds.list": "net/minecraft/sounds/SoundEvents",
            "tileentity.superclass": "net/minecraft/world/level/block/entity/BlockEntity"
        },
        "packets": {
            "directions": {
                "CLIENTBOUND": {
                    "class": "net/minecraft/network/protocol/PacketFlow",
                    "field": "CLIENTBOUND",
                    "name": "CLIENTBOUND"
                },
                "SERVERBOUND": {
                    "class": "net/minecraft/network/protocol/PacketFlow",
                    "field": "SERVERBOUND",
                    "name": "SERVERBOUND"
                }
            },
            "info": {
                "count": 152
            },
            "packet": {
                "HANDSHAKING_SERVERBOUND_00": {
                    "class": "net/minecraft/network/protocol/handshake/ClientIntentionPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "protocolVersion",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "hostName",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "port",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "intention.getId()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "HANDSHAKING"
                },
                "LOGIN_CLIENTBOUND_00": {
                    "class": "net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "reason",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "LOGIN"
                },
                "LOGIN_CLIENTBOUND_01": {
                    "class": "net/minecraft/network/protocol/login/ClientboundHelloPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "serverId",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "publicKey.getEncoded().length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "publicKey.getEncoded()",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "nonce.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "nonce",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "LOGIN"
                },
                "LOGIN_CLIENTBOUND_02": {
                    "class": "net/minecraft/network/protocol/login/ClientboundGameProfilePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 2,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "net.minecraft.core.SerializableUUID.uuidToIntArray(this.gameProfile.getId())",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "gameProfile.getName()",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "LOGIN"
                },
                "LOGIN_CLIENTBOUND_03": {
                    "class": "net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "compressionThreshold",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "LOGIN"
                },
                "LOGIN_CLIENTBOUND_04": {
                    "class": "net/minecraft/network/protocol/login/ClientboundCustomQueryPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "transactionId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "identifier",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "data.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "LOGIN"
                },
                "LOGIN_SERVERBOUND_00": {
                    "class": "net/minecraft/network/protocol/login/ServerboundHelloPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "gameProfile.getName()",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "LOGIN"
                },
                "LOGIN_SERVERBOUND_01": {
                    "class": "net/minecraft/network/protocol/login/ServerboundKeyPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "keybytes.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "keybytes",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "nonce.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "nonce",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "LOGIN"
                },
                "LOGIN_SERVERBOUND_02": {
                    "class": "net/minecraft/network/protocol/login/ServerboundCustomQueryPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 2,
                    "instructions": [
                        {
                            "field": "transactionId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "condition": "data != null",
                            "instructions": [
                                {
                                    "field": "1",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "data.copy()",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "field": "0",
                                    "operation": "write",
                                    "type": "boolean"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "LOGIN"
                },
                "PLAY_CLIENTBOUND_00": {
                    "class": "net/minecraft/network/protocol/game/ClientboundAddEntityPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "uuid",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "net.minecraft.core.Registry.ENTITY_TYPE.getId(type)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "data",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "xa",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "ya",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "za",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_01": {
                    "class": "net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_02": {
                    "class": "net/minecraft/network/protocol/game/ClientboundAddMobPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 2,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "uuid",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "type",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "yHeadRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "xd",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "yd",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "zd",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_03": {
                    "class": "net/minecraft/network/protocol/game/ClientboundAddPaintingPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "uuid",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "motive",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "direction.get2DDataValue()",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_04": {
                    "class": "net/minecraft/network/protocol/game/ClientboundAddPlayerPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "playerId",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_05": {
                    "class": "net/minecraft/network/protocol/game/ClientboundAnimatePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "action",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_06": {
                    "class": "net/minecraft/network/protocol/game/ClientboundAwardStatsPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "stats.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.stats.object2IntEntrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((it.unimi.dsi.fastutil.objects.Object2IntMap$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.stats.Stat)var3.getKey())",
                                    "var": "var4"
                                },
                                {
                                    "field": "net.minecraft.core.Registry.STAT_TYPE.getId(var4.getType())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "getId(var4)",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3.getIntValue()",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_07": {
                    "class": "net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "net.minecraft.world.level.block.Block.getId(state)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "action",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "allGood",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_08": {
                    "class": "net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "progress",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_09": {
                    "class": "net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "(byte)type",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "tag",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_0A": {
                    "class": "net/minecraft/network/protocol/game/ClientboundBlockEventPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "b0",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "b1",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "net.minecraft.core.Registry.BLOCK.getId(block)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_0B": {
                    "class": "net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "net.minecraft.world.level.block.Block.getId(blockState)",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_0C": {
                    "class": "net/minecraft/network/protocol/game/ClientboundBossEventPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "uuid"
                        },
                        {
                            "field": "operation",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "net.minecraft.network.protocol.game.ClientboundBossEventPacket$1.$SwitchMap$net$minecraft$network$protocol$game$ClientboundBossEventPacket$Operation[this.operation.ordinal()]",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "1"
                                },
                                {
                                    "field": "name",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "pct",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "color",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "overlay",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "encodeProperties()",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "2"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "3"
                                },
                                {
                                    "field": "pct",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "4"
                                },
                                {
                                    "field": "name",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "5"
                                },
                                {
                                    "field": "color",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "overlay",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "6"
                                },
                                {
                                    "field": "encodeProperties()",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "switch"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_0D": {
                    "class": "net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "difficulty.getId()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "locked",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_0E": {
                    "class": "net/minecraft/network/protocol/game/ClientboundChatPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "message",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "type.getIndex()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "sender",
                            "operation": "write",
                            "type": "uuid"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_0F": {
                    "class": "net/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "chunkPos.x",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "chunkPos.z",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "updates.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.updates",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "field": "var5.getOffset()",
                                    "operation": "write",
                                    "type": "short"
                                },
                                {
                                    "field": "net.minecraft.world.level.block.Block.getId(var5.getBlock())",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_10": {
                    "class": "net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "suggestions.getRange().getStart()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "suggestions.getRange().getLength()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "suggestions.getList().size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.suggestions.getList().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.brigadier.suggestion.Suggestion)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.getText()",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "(var3.getTooltip() != null) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "var3.getTooltip() != null",
                                    "instructions": [
                                        {
                                            "field": "net.minecraft.network.chat.ComponentUtils.fromMessage(var3.getTooltip())",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_11": {
                    "class": "net/minecraft/network/protocol/game/ClientboundCommandsPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 17,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "com.google.common.collect.Maps.newHashMap()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "new ArrayDeque()",
                            "var": "var3"
                        },
                        {
                            "condition": "var3.isEmpty() == 0",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.brigadier.tree.CommandNode)var3.pollFirst())",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.size()",
                                    "var": "var5"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "((com.mojang.brigadier.tree.CommandNode[])new com.mojang.brigadier.tree.CommandNode[var2.size()])",
                            "var": "var4"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var2.entrySet().iterator()",
                            "var": "var5"
                        },
                        {
                            "condition": "var5.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var5.next())",
                                    "var": "var6"
                                },
                                {
                                    "index": "((Integer)var6.getValue()).intValue()",
                                    "operation": "arraystore",
                                    "type": "Object",
                                    "value": "((com.mojang.brigadier.tree.CommandNode)var6.getKey())",
                                    "var": "var4"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "var4.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var4",
                            "var": "var5"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var5.length",
                            "var": "var6"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var7"
                        },
                        {
                            "condition": "var7 < var6",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var5[var7]",
                                    "var": "var8"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var8.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var4 | 0x8))",
                                            "var": "var4"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var8.getCommand() != null",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var4 | 4))",
                                            "var": "var4"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var8 instanceof com.mojang.brigadier.tree.RootCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "((byte)(var4 | 0))",
                                            "var": "var4"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "var8 instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "((byte)(var4 | 2))",
                                                    "var": "var4"
                                                },
                                                {
                                                    "condition": "((com.mojang.brigadier.tree.ArgumentCommandNode)var8).getCustomSuggestions() != null",
                                                    "instructions": [
                                                        {
                                                            "operation": "store",
                                                            "type": "int",
                                                            "value": "((byte)(var4 | 0x10))",
                                                            "var": "var4"
                                                        }
                                                    ],
                                                    "operation": "if"
                                                },
                                                {
                                                    "instructions": [
                                                        {
                                                            "condition": "var8 instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                                            "instructions": [
                                                                {
                                                                    "operation": "store",
                                                                    "type": "int",
                                                                    "value": "((byte)(var4 | 1))",
                                                                    "var": "var4"
                                                                }
                                                            ],
                                                            "operation": "if"
                                                        }
                                                    ],
                                                    "operation": "else"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "var4",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var8.getChildren().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var8.getChildren().iterator()",
                                    "var": "var5"
                                },
                                {
                                    "condition": "var5.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.CommandNode)var5.next())",
                                            "var": "var6"
                                        },
                                        {
                                            "field": "((Integer)var2.get(var6)).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "condition": "var8.getRedirect() != null",
                                    "instructions": [
                                        {
                                            "field": "((Integer)var2.get(var8.getRedirect())).intValue()",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "condition": "var8 instanceof com.mojang.brigadier.tree.ArgumentCommandNode",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((com.mojang.brigadier.tree.ArgumentCommandNode)var8)",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.getName()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "net.minecraft.commands.synchronization.ArgumentTypes.get(var5.getType())",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "var2 == null",
                                            "instructions": [
                                                {
                                                    "field": "new net.minecraft.resources.ResourceLocation(\"\")",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2.name",
                                            "operation": "write",
                                            "type": "identifier"
                                        },
                                        {
                                            "args": "var5.getType(), packetbuffer",
                                            "field": "var2.serializer",
                                            "method": "serializeToNetwork(Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V",
                                            "name": "serializeToNetwork",
                                            "operation": "interfacecall",
                                            "target": "net/minecraft/commands/synchronization/ArgumentSerializer",
                                            "type": "interface"
                                        },
                                        {
                                            "condition": "var5.getCustomSuggestions() != null",
                                            "instructions": [
                                                {
                                                    "field": "net.minecraft.commands.synchronization.SuggestionProviders.getName(var5.getCustomSuggestions())",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "var8 instanceof com.mojang.brigadier.tree.LiteralCommandNode",
                                            "instructions": [
                                                {
                                                    "field": "((com.mojang.brigadier.tree.LiteralCommandNode)var8).getLiteral()",
                                                    "operation": "write",
                                                    "type": "string"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var7",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "((Integer)var2.get(root)).intValue()",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_12": {
                    "class": "net/minecraft/network/protocol/game/ClientboundContainerAckPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "uid",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "accepted",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_13": {
                    "class": "net/minecraft/network/protocol/game/ClientboundContainerClosePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_14": {
                    "class": "net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "items.size()",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.items.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.world.item.ItemStack)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "itemstack"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_15": {
                    "class": "net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "value",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_16": {
                    "class": "net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "slot",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "itemStack",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_17": {
                    "class": "net/minecraft/network/protocol/game/ClientboundCooldownPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "net.minecraft.world.item.Item.getId(item)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "duration",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_18": {
                    "class": "net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "identifier",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "data.copy()",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_19": {
                    "class": "net/minecraft/network/protocol/game/ClientboundCustomSoundPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "name",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "source",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "volume",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "pitch",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_1A": {
                    "class": "net/minecraft/network/protocol/game/ClientboundDisconnectPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 26,
                    "instructions": [
                        {
                            "field": "reason",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_1B": {
                    "class": "net/minecraft/network/protocol/game/ClientboundEntityEventPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "eventId",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_1C": {
                    "class": "net/minecraft/network/protocol/game/ClientboundExplodePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "(float)x",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)y",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)z",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "power",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "toBlow.size()",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "net.minecraft.util.Mth.floor(this.x)",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "net.minecraft.util.Mth.floor(this.y)",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "net.minecraft.util.Mth.floor(this.z)",
                            "var": "var4"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.toBlow.iterator()",
                            "var": "var5"
                        },
                        {
                            "condition": "var5.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.core.BlockPos)var5.next())",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.getX() - var2)",
                                    "var": "var7"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.getY() - var3)",
                                    "var": "var8"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var6.getZ() - var4)",
                                    "var": "var9"
                                },
                                {
                                    "field": "var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var8",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var9",
                                    "operation": "write",
                                    "type": "byte"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "knockbackX",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "knockbackY",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "knockbackZ",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_1D": {
                    "class": "net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_1E": {
                    "class": "net/minecraft/network/protocol/game/ClientboundGameEventPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "net.minecraft.network.protocol.game.ClientboundGameEventPacket$Type.access$100(event)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "param",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_1F": {
                    "class": "net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "size",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_20": {
                    "class": "net/minecraft/network/protocol/game/ClientboundKeepAlivePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_21": {
                    "class": "net/minecraft/network/protocol/game/ClientboundLevelChunkPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "fullChunk",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "forgetOldData",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "availableSections",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "heightmaps",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "condition": "biomes != null",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.biomes.biomes",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "net.minecraft.core.Registry.BIOME.getId(var5)",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "buffer.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "buffer",
                            "operation": "write",
                            "type": "byte[]"
                        },
                        {
                            "field": "blockEntitiesTags.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.blockEntitiesTags.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.nbt.CompoundTag)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "nbtcompound"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_22": {
                    "class": "net/minecraft/network/protocol/game/ClientboundLevelEventPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "type",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "data",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "globalEvent",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_23": {
                    "class": "net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "net.minecraft.core.Registry.PARTICLE_TYPE.getId(particle.getType())",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "overrideLimiter",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "xDist",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "yDist",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "zDist",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "maxSpeed",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "count",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "args": "packetbuffer",
                            "field": "particle",
                            "method": "writeToNetwork(Lnet/minecraft/network/FriendlyByteBuf;)V",
                            "name": "writeToNetwork",
                            "operation": "interfacecall",
                            "target": "net/minecraft/core/particles/ParticleOptions",
                            "type": "interface"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_24": {
                    "class": "net/minecraft/network/protocol/game/ClientboundLightUpdatePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "trustEdges",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "skyYMask",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "blockYMask",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "emptySkyYMask",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "emptyBlockYMask",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.skyUpdates.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((byte[])var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.blockUpdates.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((byte[])var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_25": {
                    "class": "net/minecraft/network/protocol/game/ClientboundLoginPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "playerId",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.gameType.getId()",
                            "var": "var2"
                        },
                        {
                            "condition": "hardcore",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 0x8)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "previousGameType.getId()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "levels.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.levels.iterator()",
                            "var": "var3"
                        },
                        {
                            "condition": "var3.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.resources.ResourceKey)var3.next())",
                                    "var": "var4"
                                },
                                {
                                    "field": "var4.location()",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "net.minecraft.core.RegistryAccess$RegistryHolder.CODEC.encode(registryHolder)",
                            "operation": "write",
                            "type": "nbtcompound"
                        },
                        {
                            "field": "dimensionType.location()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "dimension.location()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "seed",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "maxPlayers",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "chunkRadius",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "reducedDebugInfo",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "showDeathScreen",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "isDebug",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "isFlat",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_26": {
                    "class": "net/minecraft/network/protocol/game/ClientboundMapItemDataPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "mapId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "scale",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "trackingPosition",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "locked",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "decorations.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.decorations",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "field": "var5.getType()",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "var5.getX()",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var5.getY()",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "var5.getRot() & 0xf",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "condition": "var5.getName() != null",
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.getName()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "width",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "width > 0",
                            "instructions": [
                                {
                                    "field": "height",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "startX",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "startY",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "mapColors.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "mapColors",
                                    "operation": "write",
                                    "type": "byte[]"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_27": {
                    "class": "net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "(byte)(offers.size() & 0xff)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < offers.size()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.world.item.trading.MerchantOffer)this.offers.get(var2))",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3.getBaseCostA()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "field": "var3.getResult()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var3.getCostB()",
                                    "var": "var4"
                                },
                                {
                                    "field": "(var4.isEmpty() == 0) ? 1 : 0",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "condition": "var4.isEmpty() == 0",
                                    "instructions": [
                                        {
                                            "field": "var4",
                                            "operation": "write",
                                            "type": "itemstack"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "field": "var3.isOutOfStock()",
                                    "operation": "write",
                                    "type": "boolean"
                                },
                                {
                                    "field": "var3.getUses()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.getMaxUses()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.getXp()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.getSpecialPriceDiff()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "var3.getPriceMultiplier()",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "var3.getDemand()",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "villagerLevel",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "villagerXp",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "showProgress",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "canRestock",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_28": {
                    "class": "net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "xa",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "ya",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "za",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "onGround",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_29": {
                    "class": "net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "xa",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "ya",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "za",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "onGround",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_2A": {
                    "class": "net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "onGround",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_2B": {
                    "class": "net/minecraft/network/protocol/game/ClientboundMoveEntityPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_2C": {
                    "class": "net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_2D": {
                    "class": "net/minecraft/network/protocol/game/ClientboundOpenBookPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "hand",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_2E": {
                    "class": "net/minecraft/network/protocol/game/ClientboundOpenScreenPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "type",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "title",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_2F": {
                    "class": "net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 47,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_30": {
                    "class": "net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 48,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "recipe",
                            "operation": "write",
                            "type": "identifier"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_31": {
                    "class": "net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 49,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "invulnerable",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "isFlying",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "canFly",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 4))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "instabuild",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 0x8))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "flyingSpeed",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "walkingSpeed",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_32": {
                    "class": "net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 50,
                    "instructions": [
                        {
                            "field": "event",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "event == net.minecraft.network.protocol.game.ClientboundPlayerCombatPacket$Event.END_COMBAT",
                            "instructions": [
                                {
                                    "field": "duration",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "killerId",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "condition": "event == net.minecraft.network.protocol.game.ClientboundPlayerCombatPacket$Event.ENTITY_DIED",
                                    "instructions": [
                                        {
                                            "field": "playerId",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "killerId",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "field": "message",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_33": {
                    "class": "net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 51,
                    "instructions": [
                        {
                            "field": "action",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "entries.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.entries.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.network.protocol.game.ClientboundPlayerInfoPacket$PlayerUpdate)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "net.minecraft.network.protocol.game.ClientboundPlayerInfoPacket$1.$SwitchMap$net$minecraft$network$protocol$game$ClientboundPlayerInfoPacket$Action[this.action.ordinal()]",
                                    "instructions": [
                                        {
                                            "operation": "case",
                                            "value": "1"
                                        },
                                        {
                                            "field": "var3.getProfile().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.getProfile().getName()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "var3.getProfile().getProperties().size()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var3.getProfile().getProperties().values().iterator()",
                                            "var": "var4"
                                        },
                                        {
                                            "condition": "var4.hasNext()",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "((com.mojang.authlib.properties.Property)var4.next())",
                                                    "var": "var5"
                                                },
                                                {
                                                    "field": "var5.getName()",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "field": "var5.getValue()",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "condition": "var5.hasSignature()",
                                                    "instructions": [
                                                        {
                                                            "field": "1",
                                                            "operation": "write",
                                                            "type": "boolean"
                                                        },
                                                        {
                                                            "field": "var5.getSignature()",
                                                            "operation": "write",
                                                            "type": "string"
                                                        }
                                                    ],
                                                    "operation": "if"
                                                },
                                                {
                                                    "instructions": [
                                                        {
                                                            "field": "0",
                                                            "operation": "write",
                                                            "type": "boolean"
                                                        }
                                                    ],
                                                    "operation": "else"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "field": "var3.getGameMode().getId()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "field": "var3.getLatency()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "condition": "var3.getDisplayName() == null",
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "operation": "break"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var3.getDisplayName()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "2"
                                        },
                                        {
                                            "field": "var3.getProfile().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.getGameMode().getId()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "3"
                                        },
                                        {
                                            "field": "var3.getProfile().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var3.getLatency()",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "4"
                                        },
                                        {
                                            "field": "var3.getProfile().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "condition": "var3.getDisplayName() == null",
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "boolean"
                                                },
                                                {
                                                    "operation": "break"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var3.getDisplayName()",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "operation": "break"
                                        },
                                        {
                                            "operation": "case",
                                            "value": "5"
                                        },
                                        {
                                            "field": "var3.getProfile().getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        }
                                    ],
                                    "operation": "switch"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_34": {
                    "class": "net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 52,
                    "instructions": [
                        {
                            "field": "fromAnchor",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "atEntity",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "atEntity",
                            "instructions": [
                                {
                                    "field": "entity",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "toAnchor",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_35": {
                    "class": "net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 53,
                    "instructions": [
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "net.minecraft.network.protocol.game.ClientboundPlayerPositionPacket$RelativeArgument.pack(relativeArguments)",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_36": {
                    "class": "net/minecraft/network/protocol/game/ClientboundRecipePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 54,
                    "instructions": [
                        {
                            "field": "state",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "guiOpen",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "filteringCraftable",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "furnaceGuiOpen",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "furnaceFilteringCraftable",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "recipes.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.recipes.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.resources.ResourceLocation)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "condition": "state == net.minecraft.network.protocol.game.ClientboundRecipePacket$State.INIT",
                            "instructions": [
                                {
                                    "field": "toHighlight.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.toHighlight.iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((net.minecraft.resources.ResourceLocation)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "var3",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_37": {
                    "class": "net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 55,
                    "instructions": [
                        {
                            "field": "entityIds.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.entityIds",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "var2.length",
                            "var": "var3"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var4"
                        },
                        {
                            "condition": "var4 < var3",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2[var4]",
                                    "var": "var5"
                                },
                                {
                                    "field": "var5",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "amount": "1",
                                    "field": "var4",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_38": {
                    "class": "net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 56,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "net.minecraft.world.effect.MobEffect.getId(effect)",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_39": {
                    "class": "net/minecraft/network/protocol/game/ClientboundResourcePackPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 57,
                    "instructions": [
                        {
                            "field": "url",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "hash",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_3A": {
                    "class": "net/minecraft/network/protocol/game/ClientboundRespawnPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 58,
                    "instructions": [
                        {
                            "field": "dimensionType.location()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "dimension.location()",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "seed",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "playerGameType.getId()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "previousPlayerGameType.getId()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "isDebug",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "isFlat",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "keepAllPlayerData",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_3B": {
                    "class": "net/minecraft/network/protocol/game/ClientboundRotateHeadPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 59,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "yHeadRot",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_3C": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 60,
                    "instructions": [
                        {
                            "field": "(tab != null) ? 1 : 0",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "condition": "tab != null",
                            "instructions": [
                                {
                                    "field": "tab",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_3D": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetBorderPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 61,
                    "instructions": [
                        {
                            "field": "type",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "net.minecraft.network.protocol.game.ClientboundSetBorderPacket$1.$SwitchMap$net$minecraft$network$protocol$game$ClientboundSetBorderPacket$Type[this.type.ordinal()]",
                            "instructions": [
                                {
                                    "operation": "case",
                                    "value": "1"
                                },
                                {
                                    "field": "newSize",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "2"
                                },
                                {
                                    "field": "oldSize",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "newSize",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "lerpTime",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "3"
                                },
                                {
                                    "field": "newCenterX",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "newCenterZ",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "5"
                                },
                                {
                                    "field": "warningTime",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "4"
                                },
                                {
                                    "field": "warningBlocks",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "break"
                                },
                                {
                                    "operation": "case",
                                    "value": "6"
                                },
                                {
                                    "field": "newCenterX",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "newCenterZ",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "oldSize",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "newSize",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "lerpTime",
                                    "operation": "write",
                                    "type": "varlong"
                                },
                                {
                                    "field": "newAbsoluteMaxSize",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "warningBlocks",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "field": "warningTime",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "switch"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_3E": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetCameraPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 62,
                    "instructions": [
                        {
                            "field": "cameraId",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_3F": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 63,
                    "instructions": [
                        {
                            "field": "slot",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_40": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 64,
                    "instructions": [
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_41": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 65,
                    "instructions": [
                        {
                            "field": "radius",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_42": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 66,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_43": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 67,
                    "instructions": [
                        {
                            "field": "slot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "objectiveName",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_44": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 68,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "packedItems",
                            "operation": "write",
                            "type": "metadata"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_45": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 69,
                    "instructions": [
                        {
                            "field": "sourceId",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "destId",
                            "operation": "write",
                            "type": "int"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_46": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 70,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "xa",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "ya",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "za",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_47": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 71,
                    "instructions": [
                        {
                            "field": "entity",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "this.slots.size()",
                            "var": "var2"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var3"
                        },
                        {
                            "condition": "var3 < var2",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((com.mojang.datafixers.util.Pair)this.slots.get(var3))",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.world.entity.EquipmentSlot)var4.getFirst())",
                                    "var": "var5"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((var3 != (var2 - 1)) ? 1 : 0)",
                                    "var": "var6"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var5.ordinal()",
                                    "var": "var7"
                                },
                                {
                                    "field": "(var6) ? (var7 | -128) : var7",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "(net.minecraft.world.item.ItemStack)var4.getSecond()",
                                    "operation": "write",
                                    "type": "itemstack"
                                },
                                {
                                    "amount": "1",
                                    "field": "var3",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_48": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetExperiencePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 72,
                    "instructions": [
                        {
                            "field": "experienceProgress",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "experienceLevel",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "totalExperience",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_49": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetHealthPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 73,
                    "instructions": [
                        {
                            "field": "health",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "food",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "saturation",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_4A": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetObjectivePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 74,
                    "instructions": [
                        {
                            "field": "objectiveName",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "method",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "method",
                            "instructions": [
                                {
                                    "field": "displayName",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "renderType",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_4B": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetPassengersPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 75,
                    "instructions": [
                        {
                            "field": "vehicle",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "passengers.length",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "passengers",
                            "operation": "write",
                            "type": "varint[]"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_4C": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 76,
                    "instructions": [
                        {
                            "field": "name",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "method",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "condition": "method",
                            "instructions": [
                                {
                                    "field": "displayName",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "options",
                                    "operation": "write",
                                    "type": "byte"
                                },
                                {
                                    "field": "nametagVisibility",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "collisionRule",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "field": "color",
                                    "operation": "write",
                                    "type": "enum"
                                },
                                {
                                    "field": "playerPrefix",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                },
                                {
                                    "field": "playerSuffix",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "method",
                            "instructions": [
                                {
                                    "field": "players.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "this.players.iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((String)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "var3",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_4D": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetScorePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 77,
                    "instructions": [
                        {
                            "field": "owner",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "method",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "(objectiveName == null) ? \"\" : objectiveName",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "condition": "method != net.minecraft.server.ServerScoreboard$Method.REMOVE",
                            "instructions": [
                                {
                                    "field": "score",
                                    "operation": "write",
                                    "type": "varint"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_4E": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetTimePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 78,
                    "instructions": [
                        {
                            "field": "gameTime",
                            "operation": "write",
                            "type": "long"
                        },
                        {
                            "field": "dayTime",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_4F": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSetTitlesPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 79,
                    "instructions": [
                        {
                            "field": "type",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "type != net.minecraft.network.protocol.game.ClientboundSetTitlesPacket$Type.TITLE",
                            "instructions": [
                                {
                                    "field": "text",
                                    "operation": "write",
                                    "type": "chatcomponent"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "type == net.minecraft.network.protocol.game.ClientboundSetTitlesPacket$Type.TIMES",
                            "instructions": [
                                {
                                    "field": "fadeInTime",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "stayTime",
                                    "operation": "write",
                                    "type": "int"
                                },
                                {
                                    "field": "fadeOutTime",
                                    "operation": "write",
                                    "type": "int"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_50": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSoundEntityPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 80,
                    "instructions": [
                        {
                            "field": "net.minecraft.core.Registry.SOUND_EVENT.getId(sound)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "source",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "volume",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "pitch",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_51": {
                    "class": "net/minecraft/network/protocol/game/ClientboundSoundPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 81,
                    "instructions": [
                        {
                            "field": "net.minecraft.core.Registry.SOUND_EVENT.getId(sound)",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "source",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "field": "volume",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "pitch",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_52": {
                    "class": "net/minecraft/network/protocol/game/ClientboundStopSoundPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 82,
                    "instructions": [
                        {
                            "condition": "source != null",
                            "instructions": [
                                {
                                    "condition": "name != null",
                                    "instructions": [
                                        {
                                            "field": "3",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "source",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "field": "name",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "byte"
                                        },
                                        {
                                            "field": "source",
                                            "operation": "write",
                                            "type": "enum"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "instructions": [
                                        {
                                            "condition": "name != null",
                                            "instructions": [
                                                {
                                                    "field": "2",
                                                    "operation": "write",
                                                    "type": "byte"
                                                },
                                                {
                                                    "field": "name",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "instructions": [
                                                {
                                                    "field": "0",
                                                    "operation": "write",
                                                    "type": "byte"
                                                }
                                            ],
                                            "operation": "else"
                                        }
                                    ],
                                    "operation": "else"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_53": {
                    "class": "net/minecraft/network/protocol/game/ClientboundTabListPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 83,
                    "instructions": [
                        {
                            "field": "header",
                            "operation": "write",
                            "type": "chatcomponent"
                        },
                        {
                            "field": "footer",
                            "operation": "write",
                            "type": "chatcomponent"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_54": {
                    "class": "net/minecraft/network/protocol/game/ClientboundTagQueryPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 84,
                    "instructions": [
                        {
                            "field": "transactionId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "tag",
                            "operation": "write",
                            "type": "nbtcompound"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_55": {
                    "class": "net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 85,
                    "instructions": [
                        {
                            "field": "itemId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "playerId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "amount",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_56": {
                    "class": "net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 86,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "onGround",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_57": {
                    "class": "net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 87,
                    "instructions": [
                        {
                            "field": "reset",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "added.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.added.entrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.resources.ResourceLocation)var3.getKey())",
                                    "var": "var4"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.advancements.Advancement$Builder)var3.getValue())",
                                    "var": "var5"
                                },
                                {
                                    "field": "var4",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "condition": "var5.parentId == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.parentId",
                                            "operation": "write",
                                            "type": "identifier"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "condition": "var5.display == null",
                                    "instructions": [
                                        {
                                            "field": "0",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                },
                                {
                                    "instructions": [
                                        {
                                            "field": "1",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "var5.display.title",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "var5.display.description",
                                            "operation": "write",
                                            "type": "chatcomponent"
                                        },
                                        {
                                            "field": "var5.display.icon",
                                            "operation": "write",
                                            "type": "itemstack"
                                        },
                                        {
                                            "field": "var5.display.frame",
                                            "operation": "write",
                                            "type": "enum"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var2"
                                        },
                                        {
                                            "condition": "var5.display.background != null",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 1)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "var5.display.showToast",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 2)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "condition": "var5.display.hidden",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "int",
                                                    "value": "(var2 | 4)",
                                                    "var": "var2"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var2",
                                            "operation": "write",
                                            "type": "int"
                                        },
                                        {
                                            "condition": "var5.display.background != null",
                                            "instructions": [
                                                {
                                                    "field": "var5.display.background",
                                                    "operation": "write",
                                                    "type": "identifier"
                                                }
                                            ],
                                            "operation": "if"
                                        },
                                        {
                                            "field": "var5.display.x",
                                            "operation": "write",
                                            "type": "float"
                                        },
                                        {
                                            "field": "var5.display.y",
                                            "operation": "write",
                                            "type": "float"
                                        }
                                    ],
                                    "operation": "else"
                                },
                                {
                                    "field": "var5.criteria.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var5.criteria.entrySet().iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((Map$Entry)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "(String)var3.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        }
                                    ],
                                    "operation": "loop"
                                },
                                {
                                    "field": "var5.requirements.length",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var5.requirements",
                                    "var": "var2"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "var2.length",
                                    "var": "var3"
                                },
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "0",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4 < var3",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var2[var4]",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.length",
                                            "operation": "write",
                                            "type": "varint"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5",
                                            "var": "var6"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "var6.length",
                                            "var": "var7"
                                        },
                                        {
                                            "operation": "store",
                                            "type": "int",
                                            "value": "0",
                                            "var": "var8"
                                        },
                                        {
                                            "condition": "var8 < var7",
                                            "instructions": [
                                                {
                                                    "operation": "store",
                                                    "type": "Object",
                                                    "value": "var6[var8]",
                                                    "var": "var9"
                                                },
                                                {
                                                    "field": "var9",
                                                    "operation": "write",
                                                    "type": "string"
                                                },
                                                {
                                                    "amount": "1",
                                                    "field": "var8",
                                                    "operation": "increment"
                                                }
                                            ],
                                            "operation": "loop"
                                        },
                                        {
                                            "amount": "1",
                                            "field": "var4",
                                            "operation": "increment"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "removed.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.removed.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.resources.ResourceLocation)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "var3",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "field": "progress.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.progress.entrySet().iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "(net.minecraft.resources.ResourceLocation)var3.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((net.minecraft.advancements.AdvancementProgress)var3.getValue()).criteria.size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.advancements.AdvancementProgress)var3.getValue()).criteria.entrySet().iterator()",
                                    "var": "var2"
                                },
                                {
                                    "condition": "var2.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((Map$Entry)var2.next())",
                                            "var": "var3"
                                        },
                                        {
                                            "field": "(String)var3.getKey()",
                                            "operation": "write",
                                            "type": "string"
                                        },
                                        {
                                            "field": "(((net.minecraft.advancements.CriterionProgress)var3.getValue()).obtained != null) ? 1 : 0",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "condition": "((net.minecraft.advancements.CriterionProgress)var3.getValue()).obtained != null",
                                            "instructions": [
                                                {
                                                    "field": "((net.minecraft.advancements.CriterionProgress)var3.getValue()).obtained.getTime()",
                                                    "operation": "write",
                                                    "type": "long"
                                                }
                                            ],
                                            "operation": "if"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_58": {
                    "class": "net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 88,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "attributes.size()",
                            "operation": "write",
                            "type": "int"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.attributes.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.network.protocol.game.ClientboundUpdateAttributesPacket$AttributeSnapshot)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "net.minecraft.core.Registry.ATTRIBUTE.getKey(var3.getAttribute())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "var3.getBase()",
                                    "operation": "write",
                                    "type": "double"
                                },
                                {
                                    "field": "var3.getModifiers().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "var3.getModifiers().iterator()",
                                    "var": "var4"
                                },
                                {
                                    "condition": "var4.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "((net.minecraft.world.entity.ai.attributes.AttributeModifier)var4.next())",
                                            "var": "var5"
                                        },
                                        {
                                            "field": "var5.getId()",
                                            "operation": "write",
                                            "type": "uuid"
                                        },
                                        {
                                            "field": "var5.getAmount()",
                                            "operation": "write",
                                            "type": "double"
                                        },
                                        {
                                            "field": "var5.getOperation().toValue()",
                                            "operation": "write",
                                            "type": "byte"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_59": {
                    "class": "net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 89,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "effectId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "effectAmplifier",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "effectDurationTicks",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "flags",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_5A": {
                    "class": "net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 90,
                    "instructions": [
                        {
                            "field": "recipes.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.recipes.iterator()",
                            "var": "var2"
                        },
                        {
                            "condition": "var2.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.world.item.crafting.Recipe)var2.next())",
                                    "var": "var3"
                                },
                                {
                                    "field": "net.minecraft.core.Registry.RECIPE_SERIALIZER.getKey(var3.getSerializer())",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "var3.getId()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "args": "packetbuffer, var3",
                                    "field": "var3.getSerializer()",
                                    "method": "toNetwork(Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V",
                                    "name": "toNetwork",
                                    "operation": "interfacecall",
                                    "target": "net/minecraft/world/item/crafting/RecipeSerializer",
                                    "type": "interface"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_CLIENTBOUND_5B": {
                    "class": "net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 91,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.tags.blocks.getAllTags()",
                            "var": "var2"
                        },
                        {
                            "field": "var2.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var2.entrySet().iterator()",
                            "var": "var3"
                        },
                        {
                            "condition": "var3.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var3.next())",
                                    "var": "var4"
                                },
                                {
                                    "field": "(net.minecraft.resources.ResourceLocation)var4.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((net.minecraft.tags.Tag)var4.getValue()).getValues().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.tags.Tag)var4.getValue()).getValues().iterator()",
                                    "var": "var5"
                                },
                                {
                                    "condition": "var5.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5.next()",
                                            "var": "var6"
                                        },
                                        {
                                            "field": "tags.blocks.registry.getId(var6)",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.tags.items.getAllTags()",
                            "var": "var2"
                        },
                        {
                            "field": "var2.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var2.entrySet().iterator()",
                            "var": "var3"
                        },
                        {
                            "condition": "var3.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var3.next())",
                                    "var": "var4"
                                },
                                {
                                    "field": "(net.minecraft.resources.ResourceLocation)var4.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((net.minecraft.tags.Tag)var4.getValue()).getValues().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.tags.Tag)var4.getValue()).getValues().iterator()",
                                    "var": "var5"
                                },
                                {
                                    "condition": "var5.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5.next()",
                                            "var": "var6"
                                        },
                                        {
                                            "field": "tags.items.registry.getId(var6)",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.tags.fluids.getAllTags()",
                            "var": "var2"
                        },
                        {
                            "field": "var2.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var2.entrySet().iterator()",
                            "var": "var3"
                        },
                        {
                            "condition": "var3.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var3.next())",
                                    "var": "var4"
                                },
                                {
                                    "field": "(net.minecraft.resources.ResourceLocation)var4.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((net.minecraft.tags.Tag)var4.getValue()).getValues().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.tags.Tag)var4.getValue()).getValues().iterator()",
                                    "var": "var5"
                                },
                                {
                                    "condition": "var5.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5.next()",
                                            "var": "var6"
                                        },
                                        {
                                            "field": "tags.fluids.registry.getId(var6)",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.tags.entityTypes.getAllTags()",
                            "var": "var2"
                        },
                        {
                            "field": "var2.size()",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "var2.entrySet().iterator()",
                            "var": "var3"
                        },
                        {
                            "condition": "var3.hasNext()",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((Map$Entry)var3.next())",
                                    "var": "var4"
                                },
                                {
                                    "field": "(net.minecraft.resources.ResourceLocation)var4.getKey()",
                                    "operation": "write",
                                    "type": "identifier"
                                },
                                {
                                    "field": "((net.minecraft.tags.Tag)var4.getValue()).getValues().size()",
                                    "operation": "write",
                                    "type": "varint"
                                },
                                {
                                    "operation": "store",
                                    "type": "Object",
                                    "value": "((net.minecraft.tags.Tag)var4.getValue()).getValues().iterator()",
                                    "var": "var5"
                                },
                                {
                                    "condition": "var5.hasNext()",
                                    "instructions": [
                                        {
                                            "operation": "store",
                                            "type": "Object",
                                            "value": "var5.next()",
                                            "var": "var6"
                                        },
                                        {
                                            "field": "tags.entityTypes.registry.getId(var6)",
                                            "operation": "write",
                                            "type": "varint"
                                        }
                                    ],
                                    "operation": "loop"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_00": {
                    "class": "net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_01": {
                    "class": "net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "transactionId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_02": {
                    "class": "net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 2,
                    "instructions": [
                        {
                            "field": "difficulty.getId()",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_03": {
                    "class": "net/minecraft/network/protocol/game/ServerboundChatPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 3,
                    "instructions": [
                        {
                            "field": "message",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_04": {
                    "class": "net/minecraft/network/protocol/game/ServerboundClientCommandPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 4,
                    "instructions": [
                        {
                            "field": "action",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_05": {
                    "class": "net/minecraft/network/protocol/game/ServerboundClientInformationPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 5,
                    "instructions": [
                        {
                            "field": "language",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "viewDistance",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "chatVisibility",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "chatColors",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "modelCustomisation",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "mainHand",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_06": {
                    "class": "net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 6,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "command",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_07": {
                    "class": "net/minecraft/network/protocol/game/ServerboundContainerAckPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 7,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "uid",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "(accepted) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_08": {
                    "class": "net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 8,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "buttonId",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_09": {
                    "class": "net/minecraft/network/protocol/game/ServerboundContainerClickPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 9,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "slotNum",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "buttonNum",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "uid",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "clickType",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "itemStack",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_0A": {
                    "class": "net/minecraft/network/protocol/game/ServerboundContainerClosePacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 10,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_0B": {
                    "class": "net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 11,
                    "instructions": [
                        {
                            "field": "identifier",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "data",
                            "operation": "write",
                            "type": "byte[]"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_0C": {
                    "class": "net/minecraft/network/protocol/game/ServerboundEditBookPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 12,
                    "instructions": [
                        {
                            "field": "book",
                            "operation": "write",
                            "type": "itemstack"
                        },
                        {
                            "field": "signing",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "hand",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_0D": {
                    "class": "net/minecraft/network/protocol/game/ServerboundEntityTagQuery.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 13,
                    "instructions": [
                        {
                            "field": "transactionId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_0E": {
                    "class": "net/minecraft/network/protocol/game/ServerboundInteractPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 14,
                    "instructions": [
                        {
                            "field": "entityId",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "action",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "action == net.minecraft.network.protocol.game.ServerboundInteractPacket$Action.INTERACT_AT",
                            "instructions": [
                                {
                                    "field": "(float)location.x",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "(float)location.y",
                                    "operation": "write",
                                    "type": "float"
                                },
                                {
                                    "field": "(float)location.z",
                                    "operation": "write",
                                    "type": "float"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "action != net.minecraft.network.protocol.game.ServerboundInteractPacket$Action.INTERACT",
                            "instructions": [
                                {
                                    "field": "hand",
                                    "operation": "write",
                                    "type": "enum"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "usingSecondaryAction",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_0F": {
                    "class": "net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 15,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "levels",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "keepJigsaws",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_10": {
                    "class": "net/minecraft/network/protocol/game/ServerboundKeepAlivePacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 16,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_11": {
                    "class": "net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 17,
                    "instructions": [
                        {
                            "field": "locked",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_12": {
                    "class": "net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 18,
                    "instructions": [
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "(onGround) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_13": {
                    "class": "net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 19,
                    "instructions": [
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(onGround) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_14": {
                    "class": "net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 20,
                    "instructions": [
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(onGround) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_15": {
                    "class": "net/minecraft/network/protocol/game/ServerboundMovePlayerPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 21,
                    "instructions": [
                        {
                            "field": "(onGround) ? 1 : 0",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_16": {
                    "class": "net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 22,
                    "instructions": [
                        {
                            "field": "x",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "y",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "z",
                            "operation": "write",
                            "type": "double"
                        },
                        {
                            "field": "yRot",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "xRot",
                            "operation": "write",
                            "type": "float"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_17": {
                    "class": "net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 23,
                    "instructions": [
                        {
                            "field": "left",
                            "operation": "write",
                            "type": "boolean"
                        },
                        {
                            "field": "right",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_18": {
                    "class": "net/minecraft/network/protocol/game/ServerboundPickItemPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 24,
                    "instructions": [
                        {
                            "field": "slot",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_19": {
                    "class": "net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 25,
                    "instructions": [
                        {
                            "field": "containerId",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "recipe",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "shiftDown",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_1A": {
                    "class": "net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 26,
                    "instructions": [
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "isFlying",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_1B": {
                    "class": "net/minecraft/network/protocol/game/ServerboundPlayerActionPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 27,
                    "instructions": [
                        {
                            "field": "action",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "direction.get3DDataValue()",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_1C": {
                    "class": "net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 28,
                    "instructions": [
                        {
                            "field": "id",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "action",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "data",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_1D": {
                    "class": "net/minecraft/network/protocol/game/ServerboundPlayerInputPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 29,
                    "instructions": [
                        {
                            "field": "xxa",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "zza",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "isJumping",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 1))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "isShiftKeyDown",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "((byte)(var2 | 2))",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_1E": {
                    "class": "net/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 30,
                    "instructions": [
                        {
                            "field": "purpose",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "purpose == net.minecraft.network.protocol.game.ServerboundRecipeBookUpdatePacket$Purpose.SHOWN",
                            "instructions": [
                                {
                                    "field": "recipe",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "instructions": [
                                {
                                    "condition": "purpose == net.minecraft.network.protocol.game.ServerboundRecipeBookUpdatePacket$Purpose.SETTINGS",
                                    "instructions": [
                                        {
                                            "field": "guiOpen",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "filteringCraftable",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "furnaceGuiOpen",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "furnaceFilteringCraftable",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "blastFurnaceGuiOpen",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "blastFurnaceFilteringCraftable",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "smokerGuiOpen",
                                            "operation": "write",
                                            "type": "boolean"
                                        },
                                        {
                                            "field": "smokerFilteringCraftable",
                                            "operation": "write",
                                            "type": "boolean"
                                        }
                                    ],
                                    "operation": "if"
                                }
                            ],
                            "operation": "else"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_1F": {
                    "class": "net/minecraft/network/protocol/game/ServerboundRenameItemPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 31,
                    "instructions": [
                        {
                            "field": "name",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_20": {
                    "class": "net/minecraft/network/protocol/game/ServerboundResourcePackPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 32,
                    "instructions": [
                        {
                            "field": "action",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_21": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 33,
                    "instructions": [
                        {
                            "field": "action",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "condition": "action == net.minecraft.network.protocol.game.ServerboundSeenAdvancementsPacket$Action.OPENED_TAB",
                            "instructions": [
                                {
                                    "field": "tab",
                                    "operation": "write",
                                    "type": "identifier"
                                }
                            ],
                            "operation": "if"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_22": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSelectTradePacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 34,
                    "instructions": [
                        {
                            "field": "item",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_23": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSetBeaconPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 35,
                    "instructions": [
                        {
                            "field": "primary",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "secondary",
                            "operation": "write",
                            "type": "varint"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_24": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 36,
                    "instructions": [
                        {
                            "field": "slot",
                            "operation": "write",
                            "type": "short"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_25": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 37,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "command",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "mode",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "trackOutput",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "conditional",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "automatic",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_26": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 38,
                    "instructions": [
                        {
                            "field": "entity",
                            "operation": "write",
                            "type": "varint"
                        },
                        {
                            "field": "command",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "trackOutput",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_27": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 39,
                    "instructions": [
                        {
                            "field": "slotNum",
                            "operation": "write",
                            "type": "short"
                        },
                        {
                            "field": "itemStack",
                            "operation": "write",
                            "type": "itemstack"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_28": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 40,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "name",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "target",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "pool",
                            "operation": "write",
                            "type": "identifier"
                        },
                        {
                            "field": "finalState",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "joint.getSerializedName()",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_29": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 41,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "updateType",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "mode",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "name",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "offset.getX()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "offset.getY()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "offset.getZ()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "size.getX()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "size.getY()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "size.getZ()",
                            "operation": "write",
                            "type": "byte"
                        },
                        {
                            "field": "mirror",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "rotation",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "field": "data",
                            "operation": "write",
                            "type": "string"
                        },
                        {
                            "field": "integrity",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "seed",
                            "operation": "write",
                            "type": "varlong"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "ignoreEntities",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 1)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "showAir",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 2)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "condition": "showBoundingBox",
                            "instructions": [
                                {
                                    "operation": "store",
                                    "type": "int",
                                    "value": "(var2 | 4)",
                                    "var": "var2"
                                }
                            ],
                            "operation": "if"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "byte"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_2A": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSignUpdatePacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 42,
                    "instructions": [
                        {
                            "field": "pos",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "operation": "store",
                            "type": "int",
                            "value": "0",
                            "var": "var2"
                        },
                        {
                            "condition": "var2 < 4",
                            "instructions": [
                                {
                                    "field": "lines[var2]",
                                    "operation": "write",
                                    "type": "string"
                                },
                                {
                                    "amount": "1",
                                    "field": "var2",
                                    "operation": "increment"
                                }
                            ],
                            "operation": "loop"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_2B": {
                    "class": "net/minecraft/network/protocol/game/ServerboundSwingPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 43,
                    "instructions": [
                        {
                            "field": "hand",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_2C": {
                    "class": "net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 44,
                    "instructions": [
                        {
                            "field": "uuid",
                            "operation": "write",
                            "type": "uuid"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_2D": {
                    "class": "net/minecraft/network/protocol/game/ServerboundUseItemOnPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 45,
                    "instructions": [
                        {
                            "field": "hand",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.blockHit.getBlockPos()",
                            "var": "var2"
                        },
                        {
                            "field": "var2",
                            "operation": "write",
                            "type": "position"
                        },
                        {
                            "field": "blockHit.getDirection()",
                            "operation": "write",
                            "type": "enum"
                        },
                        {
                            "operation": "store",
                            "type": "Object",
                            "value": "this.blockHit.getLocation()",
                            "var": "var3"
                        },
                        {
                            "field": "(float)(var3.x - ((double)var2.getX()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.y - ((double)var2.getY()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "(float)(var3.z - ((double)var2.getZ()))",
                            "operation": "write",
                            "type": "float"
                        },
                        {
                            "field": "blockHit.isInside()",
                            "operation": "write",
                            "type": "boolean"
                        }
                    ],
                    "state": "PLAY"
                },
                "PLAY_SERVERBOUND_2E": {
                    "class": "net/minecraft/network/protocol/game/ServerboundUseItemPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 46,
                    "instructions": [
                        {
                            "field": "hand",
                            "operation": "write",
                            "type": "enum"
                        }
                    ],
                    "state": "PLAY"
                },
                "STATUS_CLIENTBOUND_00": {
                    "class": "net/minecraft/network/protocol/status/ClientboundStatusResponsePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 0,
                    "instructions": [
                        {
                            "field": "net.minecraft.network.protocol.status.ClientboundStatusResponsePacket.GSON.toJson(status)",
                            "operation": "write",
                            "type": "string"
                        }
                    ],
                    "state": "STATUS"
                },
                "STATUS_CLIENTBOUND_01": {
                    "class": "net/minecraft/network/protocol/status/ClientboundPongResponsePacket.class",
                    "direction": "CLIENTBOUND",
                    "from_client": false,
                    "from_server": true,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "time",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "STATUS"
                },
                "STATUS_SERVERBOUND_00": {
                    "class": "net/minecraft/network/protocol/status/ServerboundStatusRequestPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 0,
                    "instructions": [],
                    "state": "STATUS"
                },
                "STATUS_SERVERBOUND_01": {
                    "class": "net/minecraft/network/protocol/status/ServerboundPingRequestPacket.class",
                    "direction": "SERVERBOUND",
                    "from_client": true,
                    "from_server": false,
                    "id": 1,
                    "instructions": [
                        {
                            "field": "time",
                            "operation": "write",
                            "type": "long"
                        }
                    ],
                    "state": "STATUS"
                }
            },
            "states": {
                "HANDSHAKING": {
                    "class": "net/minecraft/network/ConnectionProtocol",
                    "field": "HANDSHAKING",
                    "name": "HANDSHAKING"
                },
                "LOGIN": {
                    "class": "net/minecraft/network/ConnectionProtocol",
                    "field": "LOGIN",
                    "name": "LOGIN"
                },
                "PLAY": {
                    "class": "net/minecraft/network/ConnectionProtocol",
                    "field": "PLAY",
                    "name": "PLAY"
                },
                "STATUS": {
                    "class": "net/minecraft/network/ConnectionProtocol",
                    "field": "STATUS",
                    "name": "STATUS"
                }
            }
        },
        "source": {
            "classes": 5463,
            "file": ".\\minecraft-1.16.1-client-deobf2.jar",
            "other": 5463,
            "size": 11968562
        }
    }
]